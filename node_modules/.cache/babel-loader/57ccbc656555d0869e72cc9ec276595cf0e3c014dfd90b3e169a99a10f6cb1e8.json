{"ast":null,"code":"import _defineProperty from\"/Users/nilaypatel/Desktop/my-portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/nilaypatel/Desktop/my-portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/nilaypatel/Desktop/my-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React, { useState, useEffect } from 'react';\n// import './Experiences.scss';\n// interface Image {\n//   src: string;\n//   alt: string;\n//   projectName: string;\n//   companyName: string;\n// }\n// interface ExperiencesProps {\n//   images: Image[];\n// }\n// const Experiences: React.FC<ExperiencesProps> = ({ images }) => {\n//   const [loadedImages, setLoadedImages] = useState<{ [key: string]: boolean }>({});\n//   useEffect(() => {\n//     images.forEach((image) => {\n//       const img = new Image();\n//       img.onload = () => {\n//         setLoadedImages((prev) => ({ ...prev, [image.src]: true }));\n//       };\n//       img.src = image.src;\n//     });\n//   }, [images]);\n//   return (\n//     <div className=\"experiences\">\n//       {images.map((image, index) => (\n//         <div key={index} className=\"experience-item\">\n//           {/* Black text (behind the image) */}\n//           <div className=\"text-overlay black-text\">\n//             <h3 className=\"project-name\">{image.projectName}</h3>\n//             <p className=\"company-name\">{image.companyName}</p>\n//           </div>\n//           {/* Image */}\n//           <div className='image-container'>\n//             <img\n//               src={image.src}\n//               alt={image.alt}\n//               className=\"experience-image\"\n//               onLoad={(e) => setLoadedImages((prev) => ({ ...prev, [image.src]: true }))}\n//             />\n//           </div>\n//           {/* White text (visible only over the image) */}\n//           {loadedImages[image.src] && (\n//             <div\n//               className=\"text-overlay white-text\"\n//               style={{\n//                 maskImage: `url(${image.src})`,\n//                 WebkitMaskImage: `url(${image.src})`,\n//                 maskSize: 'contain',\n//                 WebkitMaskSize: 'contain',\n//                 maskPosition: 'center',\n//                 WebkitMaskPosition: 'center',\n//                 maskRepeat: 'no-repeat',\n//                 WebkitMaskRepeat: 'no-repeat',\n//               }}\n//             >\n//               <h3 className=\"project-name\">{image.projectName}</h3>\n//               <p className=\"company-name\">{image.companyName}</p>\n//             </div>\n//           )}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n// export default Experiences;\nimport React,{useState,useEffect}from'react';import'./Experiences.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Experiences=function Experiences(_ref){var images=_ref.images;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),loadedImages=_useState2[0],setLoadedImages=_useState2[1];useEffect(function(){images.forEach(function(image){var img=new Image();img.onload=function(){setLoadedImages(function(prev){return _objectSpread(_objectSpread({},prev),{},_defineProperty({},image.src,true));});};img.src=image.src;});},[images]);return/*#__PURE__*/_jsx(\"div\",{className:\"experiences\",children:images.map(function(image,index){var urlSlug=image.projectName.toLowerCase().replace(/\\s+/g,'-');return/*#__PURE__*/_jsx(\"a\",{href:\"/\".concat(urlSlug),className:\"experience-link\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"experience-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-overlay black-text\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"project-name\",children:image.projectName}),/*#__PURE__*/_jsx(\"p\",{className:\"company-name\",children:image.companyName})]}),/*#__PURE__*/_jsx(\"div\",{className:\"image-container\",children:/*#__PURE__*/_jsx(\"img\",{src:image.src,alt:image.alt,className:\"experience-image\",onLoad:function onLoad(e){return setLoadedImages(function(prev){return _objectSpread(_objectSpread({},prev),{},_defineProperty({},image.src,true));});}})}),loadedImages[image.src]&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-overlay white-text\",style:{maskImage:\"url(\".concat(image.src,\")\"),WebkitMaskImage:\"url(\".concat(image.src,\")\"),maskSize:'contain',WebkitMaskSize:'contain',maskPosition:'center',WebkitMaskPosition:'center',maskRepeat:'no-repeat',WebkitMaskRepeat:'no-repeat'},children:[/*#__PURE__*/_jsx(\"h3\",{className:\"project-name\",children:image.projectName}),/*#__PURE__*/_jsx(\"p\",{className:\"company-name\",children:image.companyName})]})]})},index);})});};export default Experiences;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Experiences","_ref","images","_useState","_useState2","_slicedToArray","loadedImages","setLoadedImages","forEach","image","img","Image","onload","prev","_objectSpread","_defineProperty","src","className","children","map","index","urlSlug","projectName","toLowerCase","replace","href","concat","companyName","alt","onLoad","e","style","maskImage","WebkitMaskImage","maskSize","WebkitMaskSize","maskPosition","WebkitMaskPosition","maskRepeat","WebkitMaskRepeat"],"sources":["/Users/nilaypatel/Desktop/my-portfolio/src/components/Experiences.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './Experiences.scss';\n\n// interface Image {\n//   src: string;\n//   alt: string;\n//   projectName: string;\n//   companyName: string;\n// }\n\n// interface ExperiencesProps {\n//   images: Image[];\n// }\n\n// const Experiences: React.FC<ExperiencesProps> = ({ images }) => {\n//   const [loadedImages, setLoadedImages] = useState<{ [key: string]: boolean }>({});\n\n//   useEffect(() => {\n//     images.forEach((image) => {\n//       const img = new Image();\n//       img.onload = () => {\n//         setLoadedImages((prev) => ({ ...prev, [image.src]: true }));\n//       };\n//       img.src = image.src;\n//     });\n//   }, [images]);\n\n//   return (\n//     <div className=\"experiences\">\n//       {images.map((image, index) => (\n//         <div key={index} className=\"experience-item\">\n//           {/* Black text (behind the image) */}\n//           <div className=\"text-overlay black-text\">\n//             <h3 className=\"project-name\">{image.projectName}</h3>\n//             <p className=\"company-name\">{image.companyName}</p>\n//           </div>\n\n//           {/* Image */}\n//           <div className='image-container'>\n//             <img\n//               src={image.src}\n//               alt={image.alt}\n//               className=\"experience-image\"\n//               onLoad={(e) => setLoadedImages((prev) => ({ ...prev, [image.src]: true }))}\n//             />\n//           </div>\n//           {/* White text (visible only over the image) */}\n//           {loadedImages[image.src] && (\n//             <div\n//               className=\"text-overlay white-text\"\n//               style={{\n//                 maskImage: `url(${image.src})`,\n//                 WebkitMaskImage: `url(${image.src})`,\n//                 maskSize: 'contain',\n//                 WebkitMaskSize: 'contain',\n//                 maskPosition: 'center',\n//                 WebkitMaskPosition: 'center',\n//                 maskRepeat: 'no-repeat',\n//                 WebkitMaskRepeat: 'no-repeat',\n//               }}\n//             >\n//               <h3 className=\"project-name\">{image.projectName}</h3>\n//               <p className=\"company-name\">{image.companyName}</p>\n//             </div>\n//           )}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Experiences;\n\n\nimport React, { useState, useEffect } from 'react';\nimport './Experiences.scss';\n\ninterface Image {\n  src: string;\n  alt: string;\n  projectName: string;\n  companyName: string;\n}\n\ninterface ExperiencesProps {\n  images: Image[];\n}\n\nconst Experiences: React.FC<ExperiencesProps> = ({ images }) => {\n  const [loadedImages, setLoadedImages] = useState<{ [key: string]: boolean }>({});\n\n  useEffect(() => {\n    images.forEach((image) => {\n      const img = new Image();\n      img.onload = () => {\n        setLoadedImages((prev) => ({ ...prev, [image.src]: true }));\n      };\n      img.src = image.src;\n    });\n  }, [images]);\n\n  return (\n    <div className=\"experiences\">\n      {images.map((image, index) => {\n        const urlSlug = image.projectName.toLowerCase().replace(/\\s+/g, '-');\n        return (\n          <a key={index} href={`/${urlSlug}`} className=\"experience-link\">\n            <div className=\"experience-item\">\n              <div className=\"text-overlay black-text\">\n                <h3 className=\"project-name\">{image.projectName}</h3>\n                <p className=\"company-name\">{image.companyName}</p>\n              </div>\n              <div className=\"image-container\">\n                <img\n                  src={image.src}\n                  alt={image.alt}\n                  className=\"experience-image\"\n                  onLoad={(e) => setLoadedImages((prev) => ({ ...prev, [image.src]: true }))}\n                />\n              </div>\n              {loadedImages[image.src] && (\n                <div\n                  className=\"text-overlay white-text\"\n                  style={{\n                    maskImage: `url(${image.src})`,\n                    WebkitMaskImage: `url(${image.src})`,\n                    maskSize: 'contain',\n                    WebkitMaskSize: 'contain',\n                    maskPosition: 'center',\n                    WebkitMaskPosition: 'center',\n                    maskRepeat: 'no-repeat',\n                    WebkitMaskRepeat: 'no-repeat',\n                  }}\n                >\n                  <h3 className=\"project-name\">{image.projectName}</h3>\n                  <p className=\"company-name\">{image.companyName}</p>\n                </div>\n              )}\n            </div>\n          </a>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Experiences;\n"],"mappings":"qXAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAa5B,GAAM,CAAAC,WAAuC,CAAG,QAA1C,CAAAA,WAAuCA,CAAAC,IAAA,CAAmB,IAAb,CAAAC,MAAM,CAAAD,IAAA,CAANC,MAAM,CACvD,IAAAC,SAAA,CAAwCT,QAAQ,CAA6B,CAAC,CAAC,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAzEG,YAAY,CAAAF,UAAA,IAAEG,eAAe,CAAAH,UAAA,IAEpCT,SAAS,CAAC,UAAM,CACdO,MAAM,CAACM,OAAO,CAAC,SAACC,KAAK,CAAK,CACxB,GAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,KAAK,CAAC,CAAC,CACvBD,GAAG,CAACE,MAAM,CAAG,UAAM,CACjBL,eAAe,CAAC,SAACM,IAAI,SAAAC,aAAA,CAAAA,aAAA,IAAWD,IAAI,KAAAE,eAAA,IAAGN,KAAK,CAACO,GAAG,CAAG,IAAI,IAAG,CAAC,CAC7D,CAAC,CACDN,GAAG,CAACM,GAAG,CAAGP,KAAK,CAACO,GAAG,CACrB,CAAC,CAAC,CACJ,CAAC,CAAE,CAACd,MAAM,CAAC,CAAC,CAEZ,mBACEL,IAAA,QAAKoB,SAAS,CAAC,aAAa,CAAAC,QAAA,CACzBhB,MAAM,CAACiB,GAAG,CAAC,SAACV,KAAK,CAAEW,KAAK,CAAK,CAC5B,GAAM,CAAAC,OAAO,CAAGZ,KAAK,CAACa,WAAW,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,CACpE,mBACE3B,IAAA,MAAe4B,IAAI,KAAAC,MAAA,CAAML,OAAO,CAAG,CAACJ,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC7DnB,KAAA,QAAKkB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BnB,KAAA,QAAKkB,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACtCrB,IAAA,OAAIoB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAET,KAAK,CAACa,WAAW,CAAK,CAAC,cACrDzB,IAAA,MAAGoB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAET,KAAK,CAACkB,WAAW,CAAI,CAAC,EAChD,CAAC,cACN9B,IAAA,QAAKoB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9BrB,IAAA,QACEmB,GAAG,CAAEP,KAAK,CAACO,GAAI,CACfY,GAAG,CAAEnB,KAAK,CAACmB,GAAI,CACfX,SAAS,CAAC,kBAAkB,CAC5BY,MAAM,CAAE,SAAAA,OAACC,CAAC,QAAK,CAAAvB,eAAe,CAAC,SAACM,IAAI,SAAAC,aAAA,CAAAA,aAAA,IAAWD,IAAI,KAAAE,eAAA,IAAGN,KAAK,CAACO,GAAG,CAAG,IAAI,IAAG,CAAC,EAAC,CAC5E,CAAC,CACC,CAAC,CACLV,YAAY,CAACG,KAAK,CAACO,GAAG,CAAC,eACtBjB,KAAA,QACEkB,SAAS,CAAC,yBAAyB,CACnCc,KAAK,CAAE,CACLC,SAAS,QAAAN,MAAA,CAASjB,KAAK,CAACO,GAAG,KAAG,CAC9BiB,eAAe,QAAAP,MAAA,CAASjB,KAAK,CAACO,GAAG,KAAG,CACpCkB,QAAQ,CAAE,SAAS,CACnBC,cAAc,CAAE,SAAS,CACzBC,YAAY,CAAE,QAAQ,CACtBC,kBAAkB,CAAE,QAAQ,CAC5BC,UAAU,CAAE,WAAW,CACvBC,gBAAgB,CAAE,WACpB,CAAE,CAAArB,QAAA,eAEFrB,IAAA,OAAIoB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAET,KAAK,CAACa,WAAW,CAAK,CAAC,cACrDzB,IAAA,MAAGoB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAET,KAAK,CAACkB,WAAW,CAAI,CAAC,EAChD,CACN,EACE,CAAC,EAhCAP,KAiCL,CAAC,CAER,CAAC,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAApB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}