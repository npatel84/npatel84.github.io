{"ast":null,"code":"var _jsxFileName = \"/Users/nilaypatel/Desktop/my-portfolio/src/components/Experiences.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Experiences.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Experiences = ({\n  images\n}) => {\n  _s();\n  const [scrollOffset, setScrollOffset] = useState(0);\n  const handleScroll = () => {\n    // Set the scrollOffset state to the current scroll position\n    setScrollOffset(window.pageYOffset);\n  };\n  useEffect(() => {\n    // Add the scroll event listener when the component mounts\n    window.addEventListener('scroll', handleScroll);\n\n    // Remove the event listener when the component unmounts\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"experiences\",\n    children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"experience-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.src,\n        alt: image.alt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-overlay\",\n        style: {\n          // This will move the text slightly to the left or right based on scroll\n          transform: `translate(-50%, -50%) translateX(${scrollOffset * 0.1}px)`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-name\",\n          children: image.projectName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"company-name\",\n          children: image.companyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Experiences, \"lUEi+6pbepJmCqvAVOG1UsIa+BA=\");\n_c = Experiences;\nexport default Experiences;\nvar _c;\n$RefreshReg$(_c, \"Experiences\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Experiences","images","_s","scrollOffset","setScrollOffset","handleScroll","window","pageYOffset","addEventListener","removeEventListener","className","children","map","image","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","transform","projectName","companyName","_c","$RefreshReg$"],"sources":["/Users/nilaypatel/Desktop/my-portfolio/src/components/Experiences.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Experiences.scss';\n\ninterface Image {\n  src: string;\n  alt: string;\n  projectName: string;\n  companyName: string;\n}\n\ninterface ExperiencesProps {\n  images: Image[];\n}\n\nconst Experiences: React.FC<ExperiencesProps> = ({ images }) => {\n  const [scrollOffset, setScrollOffset] = useState(0);\n\n  const handleScroll = () => {\n    // Set the scrollOffset state to the current scroll position\n    setScrollOffset(window.pageYOffset);\n  };\n\n  useEffect(() => {\n    // Add the scroll event listener when the component mounts\n    window.addEventListener('scroll', handleScroll);\n\n    // Remove the event listener when the component unmounts\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  return (\n    <div className=\"experiences\">\n      {images.map((image, index) => (\n        <div key={index} className=\"experience-item\">\n          <img src={image.src} alt={image.alt} />\n          <div\n            className=\"text-overlay\"\n            style={{\n              // This will move the text slightly to the left or right based on scroll\n              transform: `translate(-50%, -50%) translateX(${scrollOffset * 0.1}px)`,\n            }}\n          >\n            <div className=\"project-name\">{image.projectName}</div>\n            <div className=\"company-name\">{image.companyName}</div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Experiences;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAa5B,MAAMC,WAAuC,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAD,eAAe,CAACE,MAAM,CAACC,WAAW,CAAC;EACrC,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd;IACAU,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKW,SAAS,EAAC,aAAa;IAAAC,QAAA,EACzBV,MAAM,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBf,OAAA;MAAiBW,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC1CZ,OAAA;QAAKgB,GAAG,EAAEF,KAAK,CAACE,GAAI;QAACC,GAAG,EAAEH,KAAK,CAACG;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCrB,OAAA;QACEW,SAAS,EAAC,cAAc;QACxBW,KAAK,EAAE;UACL;UACAC,SAAS,EAAG,oCAAmCnB,YAAY,GAAG,GAAI;QACpE,CAAE;QAAAQ,QAAA,gBAEFZ,OAAA;UAAKW,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEE,KAAK,CAACU;QAAW;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvDrB,OAAA;UAAKW,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEE,KAAK,CAACW;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC;IAAA,GAXEN,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnCIF,WAAuC;AAAAyB,EAAA,GAAvCzB,WAAuC;AAqC7C,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}